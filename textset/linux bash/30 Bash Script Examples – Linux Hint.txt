The following topics of bash programming are covered in this article. You can run bash script from the terminal or by executing any bash file. Run the following command from the terminal to execute a very simple bash statement. The output of the command will be ‘ ’. Open any editor to create a bash file. Here,   editor is used to create the file and filename is set as ‘ Add the following bash script to the file and save the file. You can run bash file by two ways. One way is by using bash command and another is by setting execute permission to bash file and run the file. Both ways are shown here. You can use echo command with various options. Some useful options are mentioned in the following example. When you use ‘ ’ command without any option then a newline is added by default.   option is used to print any text without new line and   option is used to remove backslash characters from the output. Create a new bash file with a name, ‘ ’ and add the following script. Run the file with bash command.  symbol is used to add single line comment in bash script. Create a new file named ‘  and add the following script with single line comment. Run the file with bash command. You can use multi line comment in bash in various ways. A simple way is shown in the following example. Create a new bash named,   and add the following script. Here,   and   symbols are used to add multiline comment in bash script. This following script will calculate the square of 5. Run the file with bash command. You can check the following link to know more about the use of bash comment. Create a bash file with the name,   to know the use of   loop. In the example,   loop will iterate for   times. The value of   variable will increment by   in each step. When the value of   variable will 5 then the   loop will terminate. Run the file with bash command. You can check the following link to know more about the use of while loop. The basic   loop declaration is shown in the following example. Create a file named ‘ ’ and add the following script using   loop. Here,   loop will iterate for   times and print all values of the variable,   in single line. Run the file with bash command. You can use for loop for different purposes and ways in your bash script. You can check the following link to know more about the use of for loop. ‘ ’ command is used to take input from user in bash. Create a file named ‘ ’ and add the following script for taking input from the user. Here, one string value will be taken from the user and display the value by combining other string value. Run the file with bash command. You can check the following link to know more about the use of user input. You can use if condition with single or multiple conditions. Starting and ending block of this statement is define by   and  . Create a file named ‘ ’ with the following script to know the use   statement in bash. Here,   is assigned to the variable,  . if the value of   is less than 10 then the output will be “ ”, otherwise the output will be “ ”. For comparison,   is used here. For comparison, you can also use   for  ,   for   and   for   in bash script. Run the file with bash command. Different types of logical conditions can be used in if statement with two or more conditions. How you can define multiple conditions in if statement using   logic is shown in the following example.  is used to apply   logic of   statement. Create a file named   to check the following code. Here, the value of   and  variables will be taken from the user and compared with ‘ ’ and ‘ ’. If both values match then the output will be “ ”, otherwise the output will be “ ”. Run the file with bash command. ‘ ’ is used to define   logic in   condition. Create a file named  with the following code to check the use of   logic of   statement. Here, the value of   will be taken from the user. If the value is equal to   or  then the output will be “ ”, otherwise the output will be “ ”. Run the file with bash command. The use of   condition is little different in bash than other programming language. ‘ ’ is used to define   condition in bash. Create a file named, ‘ ’ and add the following script to check how   is defined in bash script. Run the file with bash command.  statement is used as the alternative of   statement. The starting and ending block of this statement is defined by ‘ ’ and ‘ ’. Create a new file named, ‘ ’ and add the following script. The output of the following script will be same to the previous  example. Run the file with bash command. Bash script can read input from command line argument like other programming language. For example,   and   variable are used to read first and second command line arguments. Create a file named “ ” and add the following script. Two argument values read by the following script and prints the total number of arguments and the argument values as output. Run the file with bash command. You can check the following link to know more about the use of command line argument. How you can read command line arguments with names is shown in the following script. Create a file named, ‘  and add the following code. Here, two arguments,  and   are read by this script and print the sum of X and Y. Run the file with bash command and with two command line arguments. You can easily combine string variables in bash. Create a file named “ ” and add the following script to check how you can combine string variables in bash by placing variables together or using   operator. Run the file with bash command. Like other programming language, bash has no built-in function to cut value from any string data. But you can do the task of substring in another way in bash that is shown in the following script. To test the script, create a file named ‘ ’ with the following code. Here, the value,   indicates the starting point from where the substring will start and   indicates the length of the substring. Run the file with bash command. You can do the arithmetical operations in bash in different ways. How you can add two integer numbers in bash using double brackets is shown in the following script. Create a file named ‘ ’ with the following code. Two integer values will be taken from the user and printed the result of addition. Run the file with bash command. You can check the following link to know more about bash arithmetic. How you can create a simple function and call the function is shown in the following script. Create a file named ‘ ’ and add the following code. You can call any function by name only without using any bracket in bash script. Run the file with bash command. Bash can’t declare function parameter or arguments at the time of function declaration. But you can use parameters in function by using other variable. If two values are passed at the time of function calling then $1 and $2 variable are used for reading the values. Create a file named ‘ ’ and add the following code. Here, the function, ‘  will calculate the area of a rectangle based on the parameter values. Run the file with bash command. Bash function can pass both numeric and string values. How you can pass a string value from the function is shown in the following example. Create a file named, ‘ ’ and add the following code. The function,   returns a string value into the variable,   which prints later by combining with other string. Run the file with bash command. You can check the following link to know more about the use of bash function. Bash uses ‘ ’ command to create a new directory. Create a file named ‘ ’ and add the following code to take a new directory name from the user. If the directory name is not exist in the current location then it will create the directory, otherwise the program will display error. Run the file with bash command. If you want to check the existence of directory in the current location before executing the ‘ ’ command then you can use the following code.  ’ option is used to test a particular directory is exist or not. Create a file named, ‘  and add the following code to create a directory by checking existence. Run the file with bash command. You can check the following link to know more about directory creation. You can read any file line by line in bash by using loop. Create a file named, ‘ ’ and add the following code to read an existing file named, ‘ ’. Run the file with bash command. Run the following command to check the original content of ‘ ’ file. You can check the following link to know the different ways to read file. ‘ ’ command is used in bash to remove any file. Create a file named ‘ ’ with the following code to take the filename from the user and remove. Here,   option is used to get permission from the user before removing the file. Run the file with bash command. New data can be added into any existing file by using   operator in bash. Create a file named  ’ and add the following code to add new content at the end of the file. Here, ‘ ’ will be added at the of ‘  file after executing the script. Run the file with bash command. You can check the existence of file in bash by using   or   option.   option is used in the following script to test the file existence. Create a file named, ‘ ’ and add the following code. Here, the filename will pass from the command line. Run the following commands to check the existence of the file. Here,   file exists and    is not exist in the current location. You can send email by using ‘ ’ or ‘ ’ command. Before using these commands, you have to install all necessary packages. Create a file named, ‘ ’ and add the following code to send the email. Run the file with bash command. You can get the current system date and time value using ` ` command. Every part of date and time value can be parsed using ‘  and ‘ . Create a new file named ‘  and add the following code to separate day, month, year, hour, minute and second values. Run the file with bash command.   is a built-in command of Linux that waits for completing any running process.   command is used with a particular process id or job id. If no process id or job id is given with wait command then it will wait for all current child processes to complete and returns exit status. Create a file named ‘  and add the following script. Run the file with bash command. You can check the following link to know more about wait command. When you want to pause the execution of any command for specific period of time then you can use   command. You can set the delay amount by   Create a file named   and add the following script. This script will wait for 5 seconds after running. Run the file with bash command. You can check the following link to know more about sleep command. Hope, after reading this article you have got a basic concept on bash scripting language and you will be able to apply them based on your requirements.
 I am a trainer of web programming courses. I like to write article or tutorial on various IT topics. I have a YouTube channel where many types of tutorials based on Ubuntu, Windows, Word, Excel, WordPress, Magento, Laravel etc. are published:  . Powered by  
 